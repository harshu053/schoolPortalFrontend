import React, { useEffect, useMemo, useState } from "react";
import styles from "./dropdowninput.module.scss";
import OutsideClickHandler from "react-outside-click-handler";

const DropdownInput = ({
  type = "input",
  setSelectedValue,
  inputValues,
  selectedValue,
  displayName="name",
  name,
  placeholder,
  labelName,
  required = true,
  setFilters,
}) => {
  const [show, setShow] = useState(false);
  const [value, setValue] = useState(selectedValue); 

useEffect(() => {
  if (value) {
    setSelectedValue(value); 
  }
}, [value])

  return (
    <OutsideClickHandler
      onOutsideClick={() => {
        setShow(false);
      }}
      display="contents"
    >
      <div className={styles.container}>
        <label className={styles.container__label}>
          {labelName} <span>{required ? "*" : ""}</span>
        </label>
        <div class={styles.inputContainer} onClick={() => setShow(!show)}>
          <input
            className={styles.input}
            placeholder={placeholder || "Select"}
            name={name}
            type="text"
            value={selectedValue}
          />

          {type === "input" && (
            <div className={styles.dropdownIcon}>
              {!show ? (
                <svg
                  width="24"
                  height="24"
                  viewBox="0 0 24 24"
                  fill="none"
                  xmlns="http://www.w3.org/2000/svg"
                >
                  <path
                    d="M12.0002 15.0002C11.8686 15.0009 11.7381 14.9757 11.6163 14.926C11.4944 14.8762 11.3836 14.8029 11.2902 14.7102L7.29019 10.7102C7.10188 10.5219 6.99609 10.2665 6.99609 10.0002C6.99609 9.73388 7.10188 9.47849 7.29019 9.29018C7.47849 9.10188 7.73388 8.99609 8.00019 8.99609C8.26649 8.99609 8.52188 9.10188 8.71019 9.29018L12.0002 12.5902L15.2902 9.29018C15.4785 9.10188 15.7339 8.99609 16.0002 8.99609C16.2665 8.99609 16.5219 9.10188 16.7102 9.29018C16.8985 9.47849 17.0043 9.73388 17.0043 10.0002C17.0043 10.2665 16.8985 10.5219 16.7102 10.7102L12.7102 14.7102C12.6167 14.8029 12.5059 14.8762 12.3841 14.926C12.2623 14.9757 12.1318 15.0009 12.0002 15.0002Z"
                    fill="black"
                    fill-opacity="0.65"
                  />
                </svg>
              ) : (
                <svg
                  width="24"
                  height="24"
                  viewBox="0 0 24 24"
                  fill="none"
                  xmlns="http://www.w3.org/2000/svg"
                >
                  <path
                    d="M16.0002 14.9999C15.8686 15.0007 15.7381 14.9755 15.6163 14.9257C15.4944 14.8759 15.3836 14.8026 15.2902 14.7099L12.0002 11.4099L8.71019 14.7099C8.52188 14.8982 8.26649 15.004 8.00019 15.004C7.73388 15.004 7.47849 14.8982 7.29019 14.7099C7.10188 14.5216 6.99609 14.2662 6.99609 13.9999C6.99609 13.8681 7.02207 13.7375 7.07253 13.6157C7.12299 13.4939 7.19695 13.3832 7.29019 13.2899L11.2902 9.28994C11.3831 9.19621 11.4937 9.12182 11.6156 9.07105C11.7375 9.02028 11.8682 8.99414 12.0002 8.99414C12.1322 8.99414 12.2629 9.02028 12.3848 9.07105C12.5066 9.12182 12.6172 9.19621 12.7102 9.28994L16.7102 13.2899C16.8039 13.3829 16.8783 13.4935 16.9291 13.6154C16.9798 13.7372 17.006 13.8679 17.006 13.9999C17.006 14.132 16.9798 14.2627 16.9291 14.3845C16.8783 14.5064 16.8039 14.617 16.7102 14.7099C16.6167 14.8026 16.5059 14.8759 16.3841 14.9257C16.2623 14.9755 16.1318 15.0007 16.0002 14.9999Z"
                    fill="black"
                    fill-opacity="0.65"
                  />
                </svg>
              )}
            </div>
          )}
          {type === "date" && (
            <div className={styles.dropdownIcon}>
              <svg
                width="24"
                height="24"
                viewBox="0 0 24 24"
                fill="none"
                xmlns="http://www.w3.org/2000/svg"
              >
                <path
                  d="M20.12 3.88C19.5579 3.31723 18.7954 3.0007 18 3H17C17 2.73478 16.8946 2.48043 16.7071 2.29289C16.5196 2.10536 16.2652 2 16 2C15.7348 2 15.4804 2.10536 15.2929 2.29289C15.1054 2.48043 15 2.73478 15 3H9C9 2.73478 8.89464 2.48043 8.70711 2.29289C8.51957 2.10536 8.26522 2 8 2C7.73478 2 7.48043 2.10536 7.29289 2.29289C7.10536 2.48043 7 2.73478 7 3H6C5.20435 3 4.44129 3.31607 3.87868 3.87868C3.31607 4.44129 3 5.20435 3 6V18C3 18.7956 3.31607 19.5587 3.87868 20.1213C4.44129 20.6839 5.20435 21 6 21H18C18.7956 21 19.5587 20.6839 20.1213 20.1213C20.6839 19.5587 21 18.7956 21 18V6C20.9993 5.20462 20.6828 4.44207 20.12 3.88ZM8 17C7.80222 17 7.60888 16.9414 7.44443 16.8315C7.27998 16.7216 7.15181 16.5654 7.07612 16.3827C7.00043 16.2 6.98063 15.9989 7.01921 15.8049C7.0578 15.6109 7.15304 15.4327 7.29289 15.2929C7.43275 15.153 7.61093 15.0578 7.80491 15.0192C7.99889 14.9806 8.19996 15.0004 8.38268 15.0761C8.56541 15.1518 8.72159 15.28 8.83147 15.4444C8.94135 15.6089 9 15.8022 9 16C9 16.2652 8.89464 16.5196 8.70711 16.7071C8.51957 16.8946 8.26522 17 8 17ZM8 13C7.80222 13 7.60888 12.9414 7.44443 12.8315C7.27998 12.7216 7.15181 12.5654 7.07612 12.3827C7.00043 12.2 6.98063 11.9989 7.01921 11.8049C7.0578 11.6109 7.15304 11.4327 7.29289 11.2929C7.43275 11.153 7.61093 11.0578 7.80491 11.0192C7.99889 10.9806 8.19996 11.0004 8.38268 11.0761C8.56541 11.1518 8.72159 11.28 8.83147 11.4444C8.94135 11.6089 9 11.8022 9 12C9 12.2652 8.89464 12.5196 8.70711 12.7071C8.51957 12.8946 8.26522 13 8 13ZM12 17C11.8022 17 11.6089 16.9414 11.4444 16.8315C11.28 16.7216 11.1518 16.5654 11.0761 16.3827C11.0004 16.2 10.9806 15.9989 11.0192 15.8049C11.0578 15.6109 11.153 15.4327 11.2929 15.2929C11.4327 15.153 11.6109 15.0578 11.8049 15.0192C11.9989 14.9806 12.2 15.0004 12.3827 15.0761C12.5654 15.1518 12.7216 15.28 12.8315 15.4444C12.9414 15.6089 13 15.8022 13 16C13 16.2652 12.8946 16.5196 12.7071 16.7071C12.5196 16.8946 12.2652 17 12 17ZM12 13C11.8022 13 11.6089 12.9414 11.4444 12.8315C11.28 12.7216 11.1518 12.5654 11.0761 12.3827C11.0004 12.2 10.9806 11.9989 11.0192 11.8049C11.0578 11.6109 11.153 11.4327 11.2929 11.2929C11.4327 11.153 11.6109 11.0578 11.8049 11.0192C11.9989 10.9806 12.2 11.0004 12.3827 11.0761C12.5654 11.1518 12.7216 11.28 12.8315 11.4444C12.9414 11.6089 13 11.8022 13 12C13 12.2652 12.8946 12.5196 12.7071 12.7071C12.5196 12.8946 12.2652 13 12 13ZM16 13C15.8022 13 15.6089 12.9414 15.4444 12.8315C15.28 12.7216 15.1518 12.5654 15.0761 12.3827C15.0004 12.2 14.9806 11.9989 15.0192 11.8049C15.0578 11.6109 15.153 11.4327 15.2929 11.2929C15.4327 11.153 15.6109 11.0578 15.8049 11.0192C15.9989 10.9806 16.2 11.0004 16.3827 11.0761C16.5654 11.1518 16.7216 11.28 16.8315 11.4444C16.9414 11.6089 17 11.8022 17 12C17 12.2652 16.8946 12.5196 16.7071 12.7071C16.5196 12.8946 16.2652 13 16 13ZM19 7H5V6C5 5.73478 5.10536 5.48043 5.29289 5.29289C5.48043 5.10536 5.73478 5 6 5H7C7 5.26522 7.10536 5.51957 7.29289 5.70711C7.48043 5.89464 7.73478 6 8 6C8.26522 6 8.51957 5.89464 8.70711 5.70711C8.89464 5.51957 9 5.26522 9 5H15C15 5.26522 15.1054 5.51957 15.2929 5.70711C15.4804 5.89464 15.7348 6 16 6C16.2652 6 16.5196 5.89464 16.7071 5.70711C16.8946 5.51957 17 5.26522 17 5H18C18.2652 5 18.5196 5.10536 18.7071 5.29289C18.8946 5.48043 19 5.73478 19 6V7Z"
                  fill="black"
                  fill-opacity="0.65"
                />
              </svg>
            </div>
          )}

          <div
            class={`${styles.menublockContainer}  ${
              !show ? styles.hideMenuBlock : ""
            }`}
          >  
            {inputValues?.map((item, index) => {
              return (
                <div
                  key={index}
                  className={styles.menublockItem}
                  onClick={() => setValue(item)}
                >
                  {item?.[displayName]}
                </div>
              );
            })}
          </div>
        </div>
      </div>
    </OutsideClickHandler>
  );
};

export default DropdownInput;
